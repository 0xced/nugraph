name: Continuous Integration

on: push

env:
  Configuration: Release
  ContinuousIntegrationBuild: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: true
  TERM: xterm

jobs:
  package:
    runs-on: ubuntu-latest
    permissions:
      checks: write
    name: 🛠 Build, test and pack
    steps:
      - name: 🧑‍💻 Checkout git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - name: 🧑‍🔧 Install .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: ℹ️ Show .NET info
        run: dotnet --info
      - name: 💾 Retrieve cached NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            nuget-
      - name: ⚙️ Restore NuGet packages
        run: dotnet restore
      - name: 🏗 Build solution
        run: dotnet build --no-restore
      - name: 📜 Fix README for nuget.org
        run: dotnet run --project tools/mmd/mmd.csproj -- README.md ${{ github.sha }} README.md
      - name: 🧪 Run tests
        # The .nupkg file is created as part of integration tests
        run: dotnet test --no-build
      - name: 📤 Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: TestResults.trx
          path: "*.trx"
      - name: 📊 Test Report
        uses: 0xced/test-reporter@4128d36b9238297063f2ac18b871b325d5fd22a7
        if: always()
        with:
          name: 🚦 Test Results
          path: '*.trx'
          reporter: dotnet-trx
      - name: 📤 Upload NuGet package artifact
        uses: actions/upload-artifact@v4
        with:
          name: NuGet package
          path: "*.nupkg"
      - name: 📝 Retrieve release notes from tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git fetch --tags --force
          git tag --list ${{ github.ref_name }} --format='%(contents)' > ReleaseNotes.md
      - name: 📤 Upload release notes
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: Release Notes
          path: ReleaseNotes.md
  publish:
    runs-on: ubuntu-latest
    needs: package
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    name: 🐿 Publish
    steps:
      - name: 📥 Download NuGet package artifact
        uses: actions/download-artifact@v4
        with:
          name: NuGet package
      - name: 📥 Download release notes artifact
        uses: actions/download-artifact@v4
        with:
          name: Release Notes
      - name: 🚢 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Version ${{ github.ref_name }}
          body_path: ReleaseNotes.md
          prerelease: ${{ contains(github.ref_name, '-') }}
          files: "*.nupkg"
      - name: 🚀 Publish NuGet package on nuget.org
        run: dotnet nuget push "*.nupkg" --source https://api.nuget.org/v3/index.json --api-key "${{ secrets.NUGET_API_KEY }}"
